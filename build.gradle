import java.text.SimpleDateFormat

buildscript {
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.26.1"
        classpath "org.ajoberstar.grgit:grgit-gradle:4.0.1"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
    id "org.ajoberstar.grgit" version "4.0.1"
    id "com.github.spotbugs" version "3.0.0"
}
apply plugin: 'java'
apply plugin: 'pmd'
apply plugin: 'maven'
apply plugin: 'com.diffplug.gradle.spotless'

sourceCompatibility = 1.7
targetCompatibility = 1.7

if (version == 'unspecified') {
    version = getVersionName()
}

ext.repo = grgit.open(currentDir: project.file('.'))

spotless {
    java {
        eclipse().configFile 'build-resources/eclipse.prefs.formatter.xml'
    }
}


configurations {
    deployerJars
}


install {
    repositories.mavenInstaller {
        pom.version = project.version
        pom.artifactId = 'clientserver'
        pom.groupId = 'net.rptools.clientserver'
    }
}


uploadArchives {
    repositories.mavenDeployer {
        pom.version = project.version
        pom.artifactId = 'clientserver'
        pom.groupId = 'net.rptools.clientserver'
        configuration = configurations.deployerJars
        repository url: 'file://' + projectDir + '/../maven-repo'
    }
}


dependencies {
    implementation 'commons-logging:commons-logging:1.1.1'
    implementation 'log4j:log4j:1.2.16'
    implementation 'com.caucho.hessian:hessian:3.1.6'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

ext.compileDate = new Date()
ext.yyyymmdd = (new SimpleDateFormat('yyyyMMDD')).format((Date)ext.compileDate)


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'http://maptool.craigs-stuff.net/repo/'
    }
}


/*
 * Gets the version name from the latest Git tag
 */

def getVersionName() {

    if (project.hasProperty('buildVersion')) {
        return buildVersion
    } else {
        String vtxtVersionNo = new File('build-resources/version.txt').text.trim()

        return vtxtVersionNo
    }
}

spotbugs {
    ignoreFailures = true
    toolVersion = '3.1.12'
    effort = 'max'
    sourceSets = []  // Empty source set so it wont run during build/check
}

pmd {
    ignoreFailures = true
    sourceSets = []  // Empty source set so it wont run during tebuild/check
}

task showBuildVersion() {
    doLast {
        println 'Build Version Number = ' + project.version
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'clientserver',
                'Implementation-Version': project.version
    }
}

